// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.12.0
// source: pb.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type LevelWordReq_TypeEnum int32

const (
	LevelWordReq_Default     LevelWordReq_TypeEnum = 0
	LevelWordReq_Listened    LevelWordReq_TypeEnum = 1
	LevelWordReq_Familiarity LevelWordReq_TypeEnum = 2
	LevelWordReq_Skilled     LevelWordReq_TypeEnum = 3
)

// Enum value maps for LevelWordReq_TypeEnum.
var (
	LevelWordReq_TypeEnum_name = map[int32]string{
		0: "Default",
		1: "Listened",
		2: "Familiarity",
		3: "Skilled",
	}
	LevelWordReq_TypeEnum_value = map[string]int32{
		"Default":     0,
		"Listened":    1,
		"Familiarity": 2,
		"Skilled":     3,
	}
)

func (x LevelWordReq_TypeEnum) Enum() *LevelWordReq_TypeEnum {
	p := new(LevelWordReq_TypeEnum)
	*p = x
	return p
}

func (x LevelWordReq_TypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LevelWordReq_TypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_proto_enumTypes[0].Descriptor()
}

func (LevelWordReq_TypeEnum) Type() protoreflect.EnumType {
	return &file_pb_proto_enumTypes[0]
}

func (x LevelWordReq_TypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LevelWordReq_TypeEnum.Descriptor instead.
func (LevelWordReq_TypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_pb_proto_rawDescGZIP(), []int{13, 0}
}

type HelloRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  int32  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
}

func (x *HelloRequest) Reset() {
	*x = HelloRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloRequest) ProtoMessage() {}

func (x *HelloRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloRequest.ProtoReflect.Descriptor instead.
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return file_pb_proto_rawDescGZIP(), []int{0}
}

func (x *HelloRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HelloRequest) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type HelloResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=Msg,proto3" json:"Msg,omitempty"`
}

func (x *HelloResponse) Reset() {
	*x = HelloResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloResponse) ProtoMessage() {}

func (x *HelloResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloResponse.ProtoReflect.Descriptor instead.
func (*HelloResponse) Descriptor() ([]byte, []int) {
	return file_pb_proto_rawDescGZIP(), []int{1}
}

func (x *HelloResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type VideoFilterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string   `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Videos    []string `protobuf:"bytes,2,rep,name=Videos,proto3" json:"Videos,omitempty"`
	Timestamp int64    `protobuf:"varint,3,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
}

func (x *VideoFilterReq) Reset() {
	*x = VideoFilterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoFilterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoFilterReq) ProtoMessage() {}

func (x *VideoFilterReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoFilterReq.ProtoReflect.Descriptor instead.
func (*VideoFilterReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_rawDescGZIP(), []int{2}
}

func (x *VideoFilterReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *VideoFilterReq) GetVideos() []string {
	if x != nil {
		return x.Videos
	}
	return nil
}

func (x *VideoFilterReq) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type VideoFilterResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResponse *BaseResponse `protobuf:"bytes,1,opt,name=BaseResponse,proto3" json:"BaseResponse,omitempty"`
	UserId       string        `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Videos       []string      `protobuf:"bytes,3,rep,name=Videos,proto3" json:"Videos,omitempty"`
}

func (x *VideoFilterResp) Reset() {
	*x = VideoFilterResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoFilterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoFilterResp) ProtoMessage() {}

func (x *VideoFilterResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoFilterResp.ProtoReflect.Descriptor instead.
func (*VideoFilterResp) Descriptor() ([]byte, []int) {
	return file_pb_proto_rawDescGZIP(), []int{3}
}

func (x *VideoFilterResp) GetBaseResponse() *BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *VideoFilterResp) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *VideoFilterResp) GetVideos() []string {
	if x != nil {
		return x.Videos
	}
	return nil
}

type BaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32  `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`           // 2000 成功  4000 参数错误  5000 服务端错误
	Message   string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`      // 文字描述
	Timestamp int64  `protobuf:"varint,3,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"` // 时间戳
}

func (x *BaseResponse) Reset() {
	*x = BaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseResponse) ProtoMessage() {}

func (x *BaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseResponse.ProtoReflect.Descriptor instead.
func (*BaseResponse) Descriptor() ([]byte, []int) {
	return file_pb_proto_rawDescGZIP(), []int{4}
}

func (x *BaseResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BaseResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *BaseResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// 核心能力指标请求参数
type CoreIndicatorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Level  int32  `protobuf:"varint,2,opt,name=Level,proto3" json:"Level,omitempty"`
}

func (x *CoreIndicatorReq) Reset() {
	*x = CoreIndicatorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreIndicatorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreIndicatorReq) ProtoMessage() {}

func (x *CoreIndicatorReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreIndicatorReq.ProtoReflect.Descriptor instead.
func (*CoreIndicatorReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_rawDescGZIP(), []int{5}
}

func (x *CoreIndicatorReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CoreIndicatorReq) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

// 核心能力指标相应参数
type CoreIndicatorResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResponse *BaseResponse `protobuf:"bytes,1,opt,name=BaseResponse,proto3" json:"BaseResponse,omitempty"` //基础信息
	TotalWord    int32         `protobuf:"varint,2,opt,name=TotalWord,proto3" json:"TotalWord,omitempty"`      //单词个数
	Listened     int32         `protobuf:"varint,3,opt,name=Listened,proto3" json:"Listened,omitempty"`        //听过
	Familiarity  int32         `protobuf:"varint,4,opt,name=Familiarity,proto3" json:"Familiarity,omitempty"`  //熟悉
	Skilled      int32         `protobuf:"varint,5,opt,name=Skilled,proto3" json:"Skilled,omitempty"`          //熟练
}

func (x *CoreIndicatorResp) Reset() {
	*x = CoreIndicatorResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoreIndicatorResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreIndicatorResp) ProtoMessage() {}

func (x *CoreIndicatorResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreIndicatorResp.ProtoReflect.Descriptor instead.
func (*CoreIndicatorResp) Descriptor() ([]byte, []int) {
	return file_pb_proto_rawDescGZIP(), []int{6}
}

func (x *CoreIndicatorResp) GetBaseResponse() *BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *CoreIndicatorResp) GetTotalWord() int32 {
	if x != nil {
		return x.TotalWord
	}
	return 0
}

func (x *CoreIndicatorResp) GetListened() int32 {
	if x != nil {
		return x.Listened
	}
	return 0
}

func (x *CoreIndicatorResp) GetFamiliarity() int32 {
	if x != nil {
		return x.Familiarity
	}
	return 0
}

func (x *CoreIndicatorResp) GetSkilled() int32 {
	if x != nil {
		return x.Skilled
	}
	return 0
}

//其他统计参数
type OtherStatisticsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *OtherStatisticsReq) Reset() {
	*x = OtherStatisticsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OtherStatisticsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OtherStatisticsReq) ProtoMessage() {}

func (x *OtherStatisticsReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OtherStatisticsReq.ProtoReflect.Descriptor instead.
func (*OtherStatisticsReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_rawDescGZIP(), []int{7}
}

func (x *OtherStatisticsReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

//其他统计参数
type OtherStatisticsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResponse     *BaseResponse `protobuf:"bytes,1,opt,name=BaseResponse,proto3" json:"BaseResponse,omitempty"`
	LearnVideo       int32         `protobuf:"varint,2,opt,name=LearnVideo,proto3" json:"LearnVideo,omitempty"`             //已学视频
	OralPractice     int32         `protobuf:"varint,3,opt,name=OralPractice,proto3" json:"OralPractice,omitempty"`         //口语练习
	ListenedWord     int32         `protobuf:"varint,4,opt,name=ListenedWord,proto3" json:"ListenedWord,omitempty"`         //听过的词汇
	OutputWord       int32         `protobuf:"varint,5,opt,name=OutputWord,proto3" json:"OutputWord,omitempty"`             //输出的词汇
	ListenedSentence int32         `protobuf:"varint,6,opt,name=ListenedSentence,proto3" json:"ListenedSentence,omitempty"` //听过的句子
	OutputSentence   int32         `protobuf:"varint,7,opt,name=OutputSentence,proto3" json:"OutputSentence,omitempty"`     //输出的句子
}

func (x *OtherStatisticsResp) Reset() {
	*x = OtherStatisticsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OtherStatisticsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OtherStatisticsResp) ProtoMessage() {}

func (x *OtherStatisticsResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OtherStatisticsResp.ProtoReflect.Descriptor instead.
func (*OtherStatisticsResp) Descriptor() ([]byte, []int) {
	return file_pb_proto_rawDescGZIP(), []int{8}
}

func (x *OtherStatisticsResp) GetBaseResponse() *BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *OtherStatisticsResp) GetLearnVideo() int32 {
	if x != nil {
		return x.LearnVideo
	}
	return 0
}

func (x *OtherStatisticsResp) GetOralPractice() int32 {
	if x != nil {
		return x.OralPractice
	}
	return 0
}

func (x *OtherStatisticsResp) GetListenedWord() int32 {
	if x != nil {
		return x.ListenedWord
	}
	return 0
}

func (x *OtherStatisticsResp) GetOutputWord() int32 {
	if x != nil {
		return x.OutputWord
	}
	return 0
}

func (x *OtherStatisticsResp) GetListenedSentence() int32 {
	if x != nil {
		return x.ListenedSentence
	}
	return 0
}

func (x *OtherStatisticsResp) GetOutputSentence() int32 {
	if x != nil {
		return x.OutputSentence
	}
	return 0
}

// 学习日历
type EverydayLearnInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Timestamp int64  `protobuf:"varint,2,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"` // 当天 0时 时戳
}

func (x *EverydayLearnInfoReq) Reset() {
	*x = EverydayLearnInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EverydayLearnInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EverydayLearnInfoReq) ProtoMessage() {}

func (x *EverydayLearnInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EverydayLearnInfoReq.ProtoReflect.Descriptor instead.
func (*EverydayLearnInfoReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_rawDescGZIP(), []int{9}
}

func (x *EverydayLearnInfoReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *EverydayLearnInfoReq) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type EverydayLearnInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResponse     *BaseResponse `protobuf:"bytes,1,opt,name=BaseResponse,proto3" json:"BaseResponse,omitempty"`
	LearnVideo       int32         `protobuf:"varint,2,opt,name=LearnVideo,proto3" json:"LearnVideo,omitempty"`
	OralPractice     int32         `protobuf:"varint,3,opt,name=OralPractice,proto3" json:"OralPractice,omitempty"`
	ListenedWord     int32         `protobuf:"varint,4,opt,name=ListenedWord,proto3" json:"ListenedWord,omitempty"`
	OutputWord       int32         `protobuf:"varint,5,opt,name=OutputWord,proto3" json:"OutputWord,omitempty"`
	ListenedSentence int32         `protobuf:"varint,6,opt,name=ListenedSentence,proto3" json:"ListenedSentence,omitempty"`
	OutputSentence   int32         `protobuf:"varint,7,opt,name=OutputSentence,proto3" json:"OutputSentence,omitempty"`
}

func (x *EverydayLearnInfoResp) Reset() {
	*x = EverydayLearnInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EverydayLearnInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EverydayLearnInfoResp) ProtoMessage() {}

func (x *EverydayLearnInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EverydayLearnInfoResp.ProtoReflect.Descriptor instead.
func (*EverydayLearnInfoResp) Descriptor() ([]byte, []int) {
	return file_pb_proto_rawDescGZIP(), []int{10}
}

func (x *EverydayLearnInfoResp) GetBaseResponse() *BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *EverydayLearnInfoResp) GetLearnVideo() int32 {
	if x != nil {
		return x.LearnVideo
	}
	return 0
}

func (x *EverydayLearnInfoResp) GetOralPractice() int32 {
	if x != nil {
		return x.OralPractice
	}
	return 0
}

func (x *EverydayLearnInfoResp) GetListenedWord() int32 {
	if x != nil {
		return x.ListenedWord
	}
	return 0
}

func (x *EverydayLearnInfoResp) GetOutputWord() int32 {
	if x != nil {
		return x.OutputWord
	}
	return 0
}

func (x *EverydayLearnInfoResp) GetListenedSentence() int32 {
	if x != nil {
		return x.ListenedSentence
	}
	return 0
}

func (x *EverydayLearnInfoResp) GetOutputSentence() int32 {
	if x != nil {
		return x.OutputSentence
	}
	return 0
}

// 级别知识点
type LevelKnowledgePointReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Level   int32  `protobuf:"varint,2,opt,name=Level,proto3" json:"Level,omitempty"`
	IsCover int32  `protobuf:"varint,3,opt,name=IsCover,proto3" json:"IsCover,omitempty"` //默认 0 不包含
}

func (x *LevelKnowledgePointReq) Reset() {
	*x = LevelKnowledgePointReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LevelKnowledgePointReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelKnowledgePointReq) ProtoMessage() {}

func (x *LevelKnowledgePointReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelKnowledgePointReq.ProtoReflect.Descriptor instead.
func (*LevelKnowledgePointReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_rawDescGZIP(), []int{11}
}

func (x *LevelKnowledgePointReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LevelKnowledgePointReq) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *LevelKnowledgePointReq) GetIsCover() int32 {
	if x != nil {
		return x.IsCover
	}
	return 0
}

type LevelKnowledgePointResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResponse *BaseResponse `protobuf:"bytes,1,opt,name=BaseResponse,proto3" json:"BaseResponse,omitempty"`
	Word         int32         `protobuf:"varint,2,opt,name=Word,proto3" json:"Word,omitempty"`
	TotalWord    int32         `protobuf:"varint,3,opt,name=TotalWord,proto3" json:"TotalWord,omitempty"`
}

func (x *LevelKnowledgePointResp) Reset() {
	*x = LevelKnowledgePointResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LevelKnowledgePointResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelKnowledgePointResp) ProtoMessage() {}

func (x *LevelKnowledgePointResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelKnowledgePointResp.ProtoReflect.Descriptor instead.
func (*LevelKnowledgePointResp) Descriptor() ([]byte, []int) {
	return file_pb_proto_rawDescGZIP(), []int{12}
}

func (x *LevelKnowledgePointResp) GetBaseResponse() *BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *LevelKnowledgePointResp) GetWord() int32 {
	if x != nil {
		return x.Word
	}
	return 0
}

func (x *LevelKnowledgePointResp) GetTotalWord() int32 {
	if x != nil {
		return x.TotalWord
	}
	return 0
}

// 词汇
type LevelWordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string                `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	WordLevel int32                 `protobuf:"varint,2,opt,name=WordLevel,proto3" json:"WordLevel,omitempty"`
	Flag      string                `protobuf:"bytes,3,opt,name=Flag,proto3" json:"Flag,omitempty"`
	Type      LevelWordReq_TypeEnum `protobuf:"varint,4,opt,name=Type,proto3,enum=pb.LevelWordReq_TypeEnum" json:"Type,omitempty"` //  默认 待学习 0、 听过 1、 熟悉 2、熟练 3
}

func (x *LevelWordReq) Reset() {
	*x = LevelWordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LevelWordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelWordReq) ProtoMessage() {}

func (x *LevelWordReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelWordReq.ProtoReflect.Descriptor instead.
func (*LevelWordReq) Descriptor() ([]byte, []int) {
	return file_pb_proto_rawDescGZIP(), []int{13}
}

func (x *LevelWordReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LevelWordReq) GetWordLevel() int32 {
	if x != nil {
		return x.WordLevel
	}
	return 0
}

func (x *LevelWordReq) GetFlag() string {
	if x != nil {
		return x.Flag
	}
	return ""
}

func (x *LevelWordReq) GetType() LevelWordReq_TypeEnum {
	if x != nil {
		return x.Type
	}
	return LevelWordReq_Default
}

type LevelWordResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResponse *BaseResponse `protobuf:"bytes,1,opt,name=BaseResponse,proto3" json:"BaseResponse,omitempty"`
	Word         []string      `protobuf:"bytes,2,rep,name=Word,proto3" json:"Word,omitempty"`
	Flag         string        `protobuf:"bytes,3,opt,name=Flag,proto3" json:"Flag,omitempty"`
}

func (x *LevelWordResp) Reset() {
	*x = LevelWordResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LevelWordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelWordResp) ProtoMessage() {}

func (x *LevelWordResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelWordResp.ProtoReflect.Descriptor instead.
func (*LevelWordResp) Descriptor() ([]byte, []int) {
	return file_pb_proto_rawDescGZIP(), []int{14}
}

func (x *LevelWordResp) GetBaseResponse() *BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *LevelWordResp) GetWord() []string {
	if x != nil {
		return x.Word
	}
	return nil
}

func (x *LevelWordResp) GetFlag() string {
	if x != nil {
		return x.Flag
	}
	return ""
}

var File_pb_proto protoreflect.FileDescriptor

var file_pb_proto_rawDesc = []byte{
	0x0a, 0x08, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0x30,
	0x0a, 0x0c, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67,
	0x22, 0x21, 0x0a, 0x0d, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x4d, 0x73, 0x67, 0x22, 0x5e, 0x0a, 0x0e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x22, 0x77, 0x0a, 0x0f, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0c, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x62, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x22, 0x5a, 0x0a, 0x0c,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x40, 0x0a, 0x10, 0x43, 0x6f, 0x72, 0x65,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xbf, 0x01, 0x0a, 0x11, 0x43,
	0x6f, 0x72, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x34, 0x0a, 0x0c, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x57,
	0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x57, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x69, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x69, 0x61, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x22, 0x2c, 0x0a, 0x12,
	0x4f, 0x74, 0x68, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xa7, 0x02, 0x0a, 0x13, 0x4f,
	0x74, 0x68, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x34, 0x0a, 0x0c, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4c, 0x65, 0x61, 0x72,
	0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x4c, 0x65,
	0x61, 0x72, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x4f, 0x72, 0x61, 0x6c,
	0x50, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x4f, 0x72, 0x61, 0x6c, 0x50, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x57, 0x6f, 0x72, 0x64,
	0x12, 0x2a, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x64, 0x53, 0x65, 0x6e, 0x74,
	0x65, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x4c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x64, 0x53, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x53, 0x65, 0x6e, 0x74,
	0x65, 0x6e, 0x63, 0x65, 0x22, 0x4c, 0x0a, 0x14, 0x45, 0x76, 0x65, 0x72, 0x79, 0x64, 0x61, 0x79,
	0x4c, 0x65, 0x61, 0x72, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x22, 0xa9, 0x02, 0x0a, 0x15, 0x45, 0x76, 0x65, 0x72, 0x79, 0x64, 0x61, 0x79, 0x4c,
	0x65, 0x61, 0x72, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0c,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x4f, 0x72, 0x61, 0x6c, 0x50, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x4f, 0x72, 0x61, 0x6c, 0x50, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x64, 0x57, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x4c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x4c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x64, 0x53, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x64, 0x53, 0x65,
	0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x53, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x60,
	0x0a, 0x16, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x43, 0x6f, 0x76, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x49, 0x73, 0x43, 0x6f, 0x76, 0x65, 0x72,
	0x22, 0x81, 0x01, 0x0a, 0x17, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0c,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x57, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x57,
	0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x57, 0x6f, 0x72, 0x64, 0x22, 0xcc, 0x01, 0x0a, 0x0c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x57, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x57, 0x6f, 0x72, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x57, 0x6f, 0x72, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x46,
	0x6c, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x6c, 0x61, 0x67, 0x12,
	0x2d, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x70, 0x62, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x2e,
	0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22, 0x43,
	0x0a, 0x08, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x69, 0x61,
	0x72, 0x69, 0x74, 0x79, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x65,
	0x64, 0x10, 0x03, 0x22, 0x6d, 0x0a, 0x0d, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x57, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0c, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x57, 0x6f,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x6c,
	0x61, 0x67, 0x32, 0x41, 0x0a, 0x0c, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x53, 0x61, 0x79, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x10,
	0x2e, 0x70, 0x62, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x4e, 0x0a, 0x12, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x13,
	0x2e, 0x70, 0x62, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0xef, 0x02, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x65,
	0x61, 0x72, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3e,
	0x0a, 0x0d, 0x43, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x14, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x44,
	0x0a, 0x0f, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x4f,
	0x74, 0x68, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x11, 0x45, 0x76, 0x65, 0x72, 0x79, 0x64, 0x61, 0x79,
	0x4c, 0x65, 0x61, 0x72, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x45,
	0x76, 0x65, 0x72, 0x79, 0x64, 0x61, 0x79, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x76, 0x65, 0x72, 0x79, 0x64, 0x61,
	0x79, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x50, 0x0a, 0x13, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x33, 0x0a, 0x0a, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x57, 0x6f, 0x72, 0x6c, 0x64,
	0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x57, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x57, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_proto_rawDescOnce sync.Once
	file_pb_proto_rawDescData = file_pb_proto_rawDesc
)

func file_pb_proto_rawDescGZIP() []byte {
	file_pb_proto_rawDescOnce.Do(func() {
		file_pb_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_proto_rawDescData)
	})
	return file_pb_proto_rawDescData
}

var file_pb_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pb_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_pb_proto_goTypes = []interface{}{
	(LevelWordReq_TypeEnum)(0),      // 0: pb.LevelWordReq.TypeEnum
	(*HelloRequest)(nil),            // 1: pb.HelloRequest
	(*HelloResponse)(nil),           // 2: pb.HelloResponse
	(*VideoFilterReq)(nil),          // 3: pb.VideoFilterReq
	(*VideoFilterResp)(nil),         // 4: pb.VideoFilterResp
	(*BaseResponse)(nil),            // 5: pb.BaseResponse
	(*CoreIndicatorReq)(nil),        // 6: pb.CoreIndicatorReq
	(*CoreIndicatorResp)(nil),       // 7: pb.CoreIndicatorResp
	(*OtherStatisticsReq)(nil),      // 8: pb.OtherStatisticsReq
	(*OtherStatisticsResp)(nil),     // 9: pb.OtherStatisticsResp
	(*EverydayLearnInfoReq)(nil),    // 10: pb.EverydayLearnInfoReq
	(*EverydayLearnInfoResp)(nil),   // 11: pb.EverydayLearnInfoResp
	(*LevelKnowledgePointReq)(nil),  // 12: pb.LevelKnowledgePointReq
	(*LevelKnowledgePointResp)(nil), // 13: pb.LevelKnowledgePointResp
	(*LevelWordReq)(nil),            // 14: pb.LevelWordReq
	(*LevelWordResp)(nil),           // 15: pb.LevelWordResp
}
var file_pb_proto_depIdxs = []int32{
	5,  // 0: pb.VideoFilterResp.BaseResponse:type_name -> pb.BaseResponse
	5,  // 1: pb.CoreIndicatorResp.BaseResponse:type_name -> pb.BaseResponse
	5,  // 2: pb.OtherStatisticsResp.BaseResponse:type_name -> pb.BaseResponse
	5,  // 3: pb.EverydayLearnInfoResp.BaseResponse:type_name -> pb.BaseResponse
	5,  // 4: pb.LevelKnowledgePointResp.BaseResponse:type_name -> pb.BaseResponse
	0,  // 5: pb.LevelWordReq.Type:type_name -> pb.LevelWordReq.TypeEnum
	5,  // 6: pb.LevelWordResp.BaseResponse:type_name -> pb.BaseResponse
	1,  // 7: pb.HelloService.SayHello:input_type -> pb.HelloRequest
	3,  // 8: pb.VideoFilterService.VideoFilter:input_type -> pb.VideoFilterReq
	6,  // 9: pb.UserLearnInfoService.CoreIndicator:input_type -> pb.CoreIndicatorReq
	8,  // 10: pb.UserLearnInfoService.OtherStatistics:input_type -> pb.OtherStatisticsReq
	10, // 11: pb.UserLearnInfoService.EverydayLearnInfo:input_type -> pb.EverydayLearnInfoReq
	12, // 12: pb.UserLearnInfoService.LevelKnowledgePoint:input_type -> pb.LevelKnowledgePointReq
	14, // 13: pb.UserLearnInfoService.LevelWorld:input_type -> pb.LevelWordReq
	2,  // 14: pb.HelloService.SayHello:output_type -> pb.HelloResponse
	4,  // 15: pb.VideoFilterService.VideoFilter:output_type -> pb.VideoFilterResp
	7,  // 16: pb.UserLearnInfoService.CoreIndicator:output_type -> pb.CoreIndicatorResp
	9,  // 17: pb.UserLearnInfoService.OtherStatistics:output_type -> pb.OtherStatisticsResp
	11, // 18: pb.UserLearnInfoService.EverydayLearnInfo:output_type -> pb.EverydayLearnInfoResp
	13, // 19: pb.UserLearnInfoService.LevelKnowledgePoint:output_type -> pb.LevelKnowledgePointResp
	15, // 20: pb.UserLearnInfoService.LevelWorld:output_type -> pb.LevelWordResp
	14, // [14:21] is the sub-list for method output_type
	7,  // [7:14] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_pb_proto_init() }
func file_pb_proto_init() {
	if File_pb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoFilterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoFilterResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoreIndicatorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoreIndicatorResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OtherStatisticsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OtherStatisticsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EverydayLearnInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EverydayLearnInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LevelKnowledgePointReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LevelKnowledgePointResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LevelWordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LevelWordResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_pb_proto_goTypes,
		DependencyIndexes: file_pb_proto_depIdxs,
		EnumInfos:         file_pb_proto_enumTypes,
		MessageInfos:      file_pb_proto_msgTypes,
	}.Build()
	File_pb_proto = out.File
	file_pb_proto_rawDesc = nil
	file_pb_proto_goTypes = nil
	file_pb_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// HelloServiceClient is the client API for HelloService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HelloServiceClient interface {
	SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloResponse, error)
}

type helloServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewHelloServiceClient(cc grpc.ClientConnInterface) HelloServiceClient {
	return &helloServiceClient{cc}
}

func (c *helloServiceClient) SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloResponse, error) {
	out := new(HelloResponse)
	err := c.cc.Invoke(ctx, "/pb.HelloService/SayHello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HelloServiceServer is the server API for HelloService service.
type HelloServiceServer interface {
	SayHello(context.Context, *HelloRequest) (*HelloResponse, error)
}

// UnimplementedHelloServiceServer can be embedded to have forward compatible implementations.
type UnimplementedHelloServiceServer struct {
}

func (*UnimplementedHelloServiceServer) SayHello(context.Context, *HelloRequest) (*HelloResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SayHello not implemented")
}

func RegisterHelloServiceServer(s *grpc.Server, srv HelloServiceServer) {
	s.RegisterService(&_HelloService_serviceDesc, srv)
}

func _HelloService_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelloServiceServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.HelloService/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelloServiceServer).SayHello(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HelloService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.HelloService",
	HandlerType: (*HelloServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHello",
			Handler:    _HelloService_SayHello_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb.proto",
}

// VideoFilterServiceClient is the client API for VideoFilterService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VideoFilterServiceClient interface {
	VideoFilter(ctx context.Context, in *VideoFilterReq, opts ...grpc.CallOption) (*VideoFilterResp, error)
}

type videoFilterServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewVideoFilterServiceClient(cc grpc.ClientConnInterface) VideoFilterServiceClient {
	return &videoFilterServiceClient{cc}
}

func (c *videoFilterServiceClient) VideoFilter(ctx context.Context, in *VideoFilterReq, opts ...grpc.CallOption) (*VideoFilterResp, error) {
	out := new(VideoFilterResp)
	err := c.cc.Invoke(ctx, "/pb.VideoFilterService/VideoFilter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VideoFilterServiceServer is the server API for VideoFilterService service.
type VideoFilterServiceServer interface {
	VideoFilter(context.Context, *VideoFilterReq) (*VideoFilterResp, error)
}

// UnimplementedVideoFilterServiceServer can be embedded to have forward compatible implementations.
type UnimplementedVideoFilterServiceServer struct {
}

func (*UnimplementedVideoFilterServiceServer) VideoFilter(context.Context, *VideoFilterReq) (*VideoFilterResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VideoFilter not implemented")
}

func RegisterVideoFilterServiceServer(s *grpc.Server, srv VideoFilterServiceServer) {
	s.RegisterService(&_VideoFilterService_serviceDesc, srv)
}

func _VideoFilterService_VideoFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VideoFilterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VideoFilterServiceServer).VideoFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.VideoFilterService/VideoFilter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VideoFilterServiceServer).VideoFilter(ctx, req.(*VideoFilterReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _VideoFilterService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.VideoFilterService",
	HandlerType: (*VideoFilterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "VideoFilter",
			Handler:    _VideoFilterService_VideoFilter_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb.proto",
}

// UserLearnInfoServiceClient is the client API for UserLearnInfoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserLearnInfoServiceClient interface {
	CoreIndicator(ctx context.Context, in *CoreIndicatorReq, opts ...grpc.CallOption) (*CoreIndicatorResp, error)
	OtherStatistics(ctx context.Context, in *OtherStatisticsReq, opts ...grpc.CallOption) (*OtherStatisticsResp, error)
	EverydayLearnInfo(ctx context.Context, in *EverydayLearnInfoReq, opts ...grpc.CallOption) (*EverydayLearnInfoResp, error)
	LevelKnowledgePoint(ctx context.Context, in *LevelKnowledgePointReq, opts ...grpc.CallOption) (*LevelKnowledgePointResp, error)
	LevelWorld(ctx context.Context, in *LevelWordReq, opts ...grpc.CallOption) (*LevelWordResp, error)
}

type userLearnInfoServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUserLearnInfoServiceClient(cc grpc.ClientConnInterface) UserLearnInfoServiceClient {
	return &userLearnInfoServiceClient{cc}
}

func (c *userLearnInfoServiceClient) CoreIndicator(ctx context.Context, in *CoreIndicatorReq, opts ...grpc.CallOption) (*CoreIndicatorResp, error) {
	out := new(CoreIndicatorResp)
	err := c.cc.Invoke(ctx, "/pb.UserLearnInfoService/CoreIndicator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userLearnInfoServiceClient) OtherStatistics(ctx context.Context, in *OtherStatisticsReq, opts ...grpc.CallOption) (*OtherStatisticsResp, error) {
	out := new(OtherStatisticsResp)
	err := c.cc.Invoke(ctx, "/pb.UserLearnInfoService/OtherStatistics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userLearnInfoServiceClient) EverydayLearnInfo(ctx context.Context, in *EverydayLearnInfoReq, opts ...grpc.CallOption) (*EverydayLearnInfoResp, error) {
	out := new(EverydayLearnInfoResp)
	err := c.cc.Invoke(ctx, "/pb.UserLearnInfoService/EverydayLearnInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userLearnInfoServiceClient) LevelKnowledgePoint(ctx context.Context, in *LevelKnowledgePointReq, opts ...grpc.CallOption) (*LevelKnowledgePointResp, error) {
	out := new(LevelKnowledgePointResp)
	err := c.cc.Invoke(ctx, "/pb.UserLearnInfoService/LevelKnowledgePoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userLearnInfoServiceClient) LevelWorld(ctx context.Context, in *LevelWordReq, opts ...grpc.CallOption) (*LevelWordResp, error) {
	out := new(LevelWordResp)
	err := c.cc.Invoke(ctx, "/pb.UserLearnInfoService/LevelWorld", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserLearnInfoServiceServer is the server API for UserLearnInfoService service.
type UserLearnInfoServiceServer interface {
	CoreIndicator(context.Context, *CoreIndicatorReq) (*CoreIndicatorResp, error)
	OtherStatistics(context.Context, *OtherStatisticsReq) (*OtherStatisticsResp, error)
	EverydayLearnInfo(context.Context, *EverydayLearnInfoReq) (*EverydayLearnInfoResp, error)
	LevelKnowledgePoint(context.Context, *LevelKnowledgePointReq) (*LevelKnowledgePointResp, error)
	LevelWorld(context.Context, *LevelWordReq) (*LevelWordResp, error)
}

// UnimplementedUserLearnInfoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserLearnInfoServiceServer struct {
}

func (*UnimplementedUserLearnInfoServiceServer) CoreIndicator(context.Context, *CoreIndicatorReq) (*CoreIndicatorResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CoreIndicator not implemented")
}
func (*UnimplementedUserLearnInfoServiceServer) OtherStatistics(context.Context, *OtherStatisticsReq) (*OtherStatisticsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OtherStatistics not implemented")
}
func (*UnimplementedUserLearnInfoServiceServer) EverydayLearnInfo(context.Context, *EverydayLearnInfoReq) (*EverydayLearnInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EverydayLearnInfo not implemented")
}
func (*UnimplementedUserLearnInfoServiceServer) LevelKnowledgePoint(context.Context, *LevelKnowledgePointReq) (*LevelKnowledgePointResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LevelKnowledgePoint not implemented")
}
func (*UnimplementedUserLearnInfoServiceServer) LevelWorld(context.Context, *LevelWordReq) (*LevelWordResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LevelWorld not implemented")
}

func RegisterUserLearnInfoServiceServer(s *grpc.Server, srv UserLearnInfoServiceServer) {
	s.RegisterService(&_UserLearnInfoService_serviceDesc, srv)
}

func _UserLearnInfoService_CoreIndicator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CoreIndicatorReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserLearnInfoServiceServer).CoreIndicator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserLearnInfoService/CoreIndicator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserLearnInfoServiceServer).CoreIndicator(ctx, req.(*CoreIndicatorReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserLearnInfoService_OtherStatistics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OtherStatisticsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserLearnInfoServiceServer).OtherStatistics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserLearnInfoService/OtherStatistics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserLearnInfoServiceServer).OtherStatistics(ctx, req.(*OtherStatisticsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserLearnInfoService_EverydayLearnInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EverydayLearnInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserLearnInfoServiceServer).EverydayLearnInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserLearnInfoService/EverydayLearnInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserLearnInfoServiceServer).EverydayLearnInfo(ctx, req.(*EverydayLearnInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserLearnInfoService_LevelKnowledgePoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LevelKnowledgePointReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserLearnInfoServiceServer).LevelKnowledgePoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserLearnInfoService/LevelKnowledgePoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserLearnInfoServiceServer).LevelKnowledgePoint(ctx, req.(*LevelKnowledgePointReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserLearnInfoService_LevelWorld_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LevelWordReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserLearnInfoServiceServer).LevelWorld(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserLearnInfoService/LevelWorld",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserLearnInfoServiceServer).LevelWorld(ctx, req.(*LevelWordReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserLearnInfoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.UserLearnInfoService",
	HandlerType: (*UserLearnInfoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CoreIndicator",
			Handler:    _UserLearnInfoService_CoreIndicator_Handler,
		},
		{
			MethodName: "OtherStatistics",
			Handler:    _UserLearnInfoService_OtherStatistics_Handler,
		},
		{
			MethodName: "EverydayLearnInfo",
			Handler:    _UserLearnInfoService_EverydayLearnInfo_Handler,
		},
		{
			MethodName: "LevelKnowledgePoint",
			Handler:    _UserLearnInfoService_LevelKnowledgePoint_Handler,
		},
		{
			MethodName: "LevelWorld",
			Handler:    _UserLearnInfoService_LevelWorld_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb.proto",
}
